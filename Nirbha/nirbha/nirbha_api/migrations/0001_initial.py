# Generated by Django 3.2.5 on 2021-07-16 08:47

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Deviceconfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imei', models.TextField(blank=True, null=True)),
                ('eventcode', models.IntegerField(blank=True, null=True)),
                ('eventname', models.TextField(blank=True, null=True)),
                ('parameter', models.TextField(blank=True, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('update_time', models.DateTimeField(blank=True, null=True)),
                ('iswrite', models.IntegerField(blank=True, null=True)),
                ('response_type', models.TextField(blank=True, null=True)),
                ('response', models.TextField(blank=True, null=True)),
                ('tcp_port', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'deviceconfig',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DeviceVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imei', models.TextField(blank=True, null=True)),
                ('version', models.TextField(blank=True, null=True)),
                ('update_time', models.DateTimeField(blank=True, null=True)),
                ('data', models.TextField(blank=True, null=True)),
                ('port', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'device_version',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclActivitylog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('userid', models.IntegerField(blank=True, null=True)),
                ('actionid', models.IntegerField(blank=True, null=True)),
                ('device', models.TextField()),
                ('deviceid', models.IntegerField(blank=True, null=True)),
                ('ipaddress', models.TextField(blank=True, null=True)),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'iocl_activitylog',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclAlertdetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicleid', models.IntegerField(blank=True, null=True)),
                ('transportername', models.TextField(blank=True, null=True)),
                ('companyid', models.IntegerField(blank=True, null=True)),
                ('track_date', models.TextField(blank=True, null=True)),
                ('ovscount', models.IntegerField(blank=True, null=True)),
                ('insert_time', models.DateTimeField(blank=True, null=True)),
                ('nightdriveduration', models.TextField(blank=True, null=True)),
                ('nightdrivecount', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'iocl_alertdetails',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclAlertMonitor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imeino', models.TextField(blank=True, null=True)),
                ('alert_type', models.IntegerField(blank=True, null=True)),
                ('in_out_flag', models.IntegerField(blank=True, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('trackdatetime', models.DateTimeField(blank=True, null=True)),
                ('alertsendflag', models.IntegerField(blank=True, null=True)),
                ('currentdatetime', models.DateTimeField(blank=True, null=True)),
                ('latitude', models.CharField(blank=True, max_length=20, null=True)),
                ('longitude', models.CharField(blank=True, max_length=20, null=True)),
                ('tripid', models.IntegerField()),
                ('vehicleid', models.IntegerField(blank=True, null=True)),
                ('nightdriveduration', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'iocl_alert_monitor',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclAlertMonitorOld',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alertmoniter_id', models.IntegerField(blank=True, null=True)),
                ('imeino', models.TextField(blank=True, null=True)),
                ('alert_type', models.IntegerField(blank=True, null=True)),
                ('in_out_flag', models.IntegerField(blank=True, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('trackdatetime', models.DateTimeField(blank=True, null=True)),
                ('alertsendflag', models.IntegerField(blank=True, null=True)),
                ('currentdatetime', models.DateTimeField(blank=True, null=True)),
                ('latitude', models.CharField(blank=True, max_length=20, null=True)),
                ('longitude', models.CharField(blank=True, max_length=20, null=True)),
                ('tripid', models.IntegerField(blank=True, null=True)),
                ('vehicleid', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'iocl_alert_monitor_old',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclAlertMonitorOld2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alertmoniter_id', models.IntegerField(blank=True, null=True)),
                ('imeino', models.TextField(blank=True, null=True)),
                ('alert_type', models.IntegerField(blank=True, null=True)),
                ('in_out_flag', models.IntegerField(blank=True, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('trackdatetime', models.DateTimeField(blank=True, null=True)),
                ('alertsendflag', models.IntegerField(blank=True, null=True)),
                ('currentdatetime', models.DateTimeField(blank=True, null=True)),
                ('latitude', models.CharField(blank=True, max_length=20, null=True)),
                ('longitude', models.CharField(blank=True, max_length=20, null=True)),
                ('tripid', models.IntegerField(blank=True, null=True)),
                ('vehicleid', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'iocl_alert_monitor_old2',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclAlertSendReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_monitor_id', models.IntegerField()),
                ('tripid', models.IntegerField()),
                ('vehicleid', models.IntegerField()),
                ('mobilenumber', models.TextField(blank=True, null=True)),
                ('email', models.TextField(blank=True, null=True)),
                ('alert_send_time', models.DateTimeField()),
            ],
            options={
                'db_table': 'iocl_alert_send_report',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclAlertSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type_id', models.IntegerField()),
                ('action_type', models.IntegerField()),
                ('access_roles', models.TextField()),
                ('created_date', models.DateTimeField()),
                ('created_by', models.IntegerField()),
                ('modified_date', models.DateTimeField(blank=True, null=True)),
                ('modified_by', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField()),
                ('isdeleted', models.IntegerField()),
            ],
            options={
                'db_table': 'iocl_alert_settings',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclApproved',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rtdid', models.IntegerField()),
                ('field_officer_id', models.IntegerField(blank=True, null=True)),
                ('field_officer_date', models.DateTimeField(blank=True, null=True)),
                ('field_officer_is_approved', models.IntegerField(blank=True, null=True)),
                ('state_level_sales_id', models.IntegerField(blank=True, null=True)),
                ('state_level_sales_date', models.DateTimeField(blank=True, null=True)),
                ('state_level_sales_is_approved', models.IntegerField(blank=True, null=True)),
                ('state_level_lpg_head_id', models.IntegerField(blank=True, null=True)),
                ('state_level_lpg_head_date', models.DateTimeField(blank=True, null=True)),
                ('state_level_lpg_head_is_approved', models.IntegerField(blank=True, null=True)),
                ('state_level_fin_id', models.IntegerField(blank=True, null=True)),
                ('state_level_fin_date', models.DateTimeField(blank=True, null=True)),
                ('state_level_fin_is_approved', models.IntegerField(blank=True, null=True)),
                ('state_level_ops_id', models.IntegerField(blank=True, null=True)),
                ('state_level_ops_date', models.DateTimeField(blank=True, null=True)),
                ('state_level_ops_is_approved', models.IntegerField(blank=True, null=True)),
                ('field_officer_remark', models.TextField(blank=True, null=True)),
                ('state_level_sales_remark', models.TextField(blank=True, null=True)),
                ('state_level_ops_remark', models.TextField(blank=True, null=True)),
                ('state_level_fin_remark', models.TextField(blank=True, null=True)),
                ('state_level_lpg_head_remark', models.TextField(blank=True, null=True)),
                ('field_officer_select_route_reason', models.TextField(blank=True, null=True)),
                ('field_office_route_change_reason', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'iocl_approved',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclApproveMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rtdid', models.IntegerField(blank=True, null=True)),
                ('plant_manager_id', models.IntegerField(blank=True, null=True)),
                ('plant_manager_date', models.DateTimeField(blank=True, null=True)),
                ('plant_manager_process_id', models.IntegerField(blank=True, null=True)),
                ('state_level_sales_id', models.IntegerField(blank=True, null=True)),
                ('state_level_sales_date', models.DateTimeField(blank=True, null=True)),
                ('state_level_sales_process_id', models.IntegerField(blank=True, null=True)),
                ('state_level_ops_id', models.IntegerField(blank=True, null=True)),
                ('state_level_ops_date', models.DateTimeField(blank=True, null=True)),
                ('state_level_ops_process_id', models.IntegerField(blank=True, null=True)),
                ('state_level_fin_id', models.IntegerField(blank=True, null=True)),
                ('state_level_fin_date', models.DateTimeField(blank=True, null=True)),
                ('state_level_fin_process_id', models.IntegerField(blank=True, null=True)),
                ('state_level_lpg_head_id', models.IntegerField(blank=True, null=True)),
                ('state_level_lpg_head_date', models.DateTimeField(blank=True, null=True)),
                ('state_level_lpg_head_process_id', models.IntegerField(blank=True, null=True)),
                ('plant_manager_select_route_reason', models.TextField(blank=True, null=True)),
                ('plant_manager_route_change_reason', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'iocl_approve_master',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclCheckdata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.CharField(blank=True, max_length=20, null=True)),
                ('name', models.CharField(blank=True, max_length=15, null=True)),
                ('vech_imei', models.CharField(blank=True, max_length=15, null=True)),
                ('latitude', models.CharField(blank=True, max_length=40, null=True)),
                ('longitude', models.CharField(blank=True, max_length=40, null=True)),
            ],
            options={
                'db_table': 'iocl_checkdata',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclCity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stateid', models.IntegerField(blank=True, null=True)),
                ('cityname', models.TextField(blank=True, null=True)),
                ('createdby', models.IntegerField()),
                ('createdate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'iocl_city',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniquecode', models.TextField()),
                ('companyname', models.TextField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('stateid', models.IntegerField()),
                ('cityid', models.IntegerField()),
                ('pincode', models.TextField(blank=True, null=True)),
                ('phoneno', models.TextField(blank=True, null=True)),
                ('mobileno', models.TextField(blank=True, null=True)),
                ('personname', models.TextField(blank=True, null=True)),
                ('person_mobileno', models.TextField(blank=True, null=True)),
                ('person_email', models.TextField(blank=True, null=True)),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
                ('status', models.IntegerField()),
                ('latitude', models.TextField(blank=True, null=True)),
                ('longitude', models.TextField(blank=True, null=True)),
                ('isdistributor', models.IntegerField()),
                ('groupid', models.IntegerField()),
                ('drc_code', models.TextField(blank=True, null=True)),
                ('loadinglocation', models.TextField()),
                ('unloadinglocation', models.TextField()),
                ('isloadinglocation', models.IntegerField()),
                ('isprivateplant', models.IntegerField()),
                ('associatedplant', models.TextField()),
                ('engineer_email', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'iocl_company',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclConstants',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('speed_vehicle_hr', models.IntegerField()),
                ('idle_vehicle_hr', models.IntegerField()),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('modified_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'iocl_constants',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclDealerMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('contact_person', models.TextField(blank=True, null=True)),
                ('number', models.TextField(blank=True, null=True)),
                ('alt_number', models.TextField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('city', models.TextField(blank=True, null=True)),
                ('state', models.TextField(blank=True, null=True)),
                ('email', models.TextField(blank=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('modified_by', models.IntegerField(blank=True, null=True)),
                ('modified_date', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
                ('status', models.IntegerField()),
                ('uniquecode', models.UUIDField()),
                ('vltmanufacturerid', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'iocl_dealer_master',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniquecode', models.TextField()),
                ('deviceimeino', models.TextField()),
                ('simcardproviderid', models.IntegerField()),
                ('simno', models.TextField(blank=True, null=True)),
                ('devicedetails', models.TextField(blank=True, null=True)),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
                ('status', models.IntegerField()),
                ('deviceidno', models.TextField()),
            ],
            options={
                'db_table': 'iocl_device',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclDeviceaudiolog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imei', models.TextField(blank=True, null=True)),
                ('zoneid', models.IntegerField(blank=True, null=True)),
                ('latitude', models.TextField()),
                ('longitude', models.TextField()),
                ('rawdata', models.TextField(blank=True, null=True)),
                ('audioplayedtime', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'iocl_deviceaudiolog',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclDevicechangeLogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicleid', models.IntegerField()),
                ('old_imeino', models.TextField()),
                ('new_imeino', models.TextField()),
                ('changereason', models.TextField()),
                ('devicechange_date', models.DateTimeField()),
                ('devicechange_by', models.IntegerField()),
            ],
            options={
                'db_table': 'iocl_devicechange_logs',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclDeviceSetzone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniquecode', models.TextField()),
                ('imei', models.TextField(blank=True, null=True)),
                ('zoneid', models.IntegerField(blank=True, null=True)),
                ('latitude', models.TextField(blank=True, null=True)),
                ('longitude', models.TextField(blank=True, null=True)),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('radius', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'iocl_device_setzone',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclDistanceMovementReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniquecode', models.TextField(blank=True, null=True)),
                ('vehicleid', models.IntegerField()),
                ('track_date', models.DateTimeField()),
                ('distance', models.FloatField()),
                ('travel_period', models.TextField()),
                ('stoppage_period', models.TextField()),
                ('average', models.FloatField()),
                ('max_speed', models.FloatField()),
                ('exceptions', models.TextField(blank=True, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('modified_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField()),
                ('isdeleted', models.IntegerField()),
                ('transporterid', models.IntegerField()),
                ('tripid', models.IntegerField()),
                ('vehicleno', models.CharField(blank=True, max_length=30, null=True)),
                ('actual_distance', models.FloatField()),
            ],
            options={
                'db_table': 'iocl_distance_movement_report',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclDriver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniquecode', models.TextField()),
                ('companyid', models.IntegerField()),
                ('drivername', models.TextField()),
                ('mobileno', models.TextField(blank=True, null=True)),
                ('licenceno', models.TextField(blank=True, null=True)),
                ('licencetype', models.TextField(blank=True, null=True)),
                ('licenceexpirydate', models.DateField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'iocl_driver',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclGeofencingzone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniquecode', models.TextField()),
                ('geofencingzone', models.TextField(blank=True, null=True)),
                ('routeid', models.IntegerField()),
                ('bounds', models.TextField(blank=True, null=True)),
                ('zonetypeid', models.IntegerField(blank=True, null=True)),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'iocl_geofencingzone',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclGroup',
            fields=[
                ('groupid', models.AutoField(primary_key=True, serialize=False)),
                ('group_name', models.TextField(blank=True, null=True)),
                ('createdby', models.IntegerField(blank=True, null=True)),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField()),
                ('isdeleted', models.IntegerField()),
            ],
            options={
                'db_table': 'iocl_group',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclLastTrackingLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniquecode', models.TextField()),
                ('latitude', models.TextField()),
                ('longitude', models.TextField()),
                ('vehicleid', models.IntegerField()),
                ('tripid', models.IntegerField()),
                ('trackdatetime', models.DateTimeField()),
                ('speed', models.FloatField(blank=True, null=True)),
                ('locationid', models.IntegerField()),
                ('isonac', models.IntegerField()),
                ('isonignition', models.IntegerField()),
                ('mainpower', models.IntegerField(blank=True, null=True)),
                ('distance', models.FloatField(blank=True, null=True)),
                ('istemperatingmachine', models.IntegerField()),
                ('statusindicator', models.CharField(blank=True, max_length=50, null=True)),
                ('odometer', models.IntegerField(blank=True, null=True)),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
                ('status', models.IntegerField()),
                ('internalbattery', models.IntegerField()),
            ],
            options={
                'db_table': 'iocl_last_tracking_log',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclLastTrip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniquecode', models.TextField()),
                ('tripname', models.TextField(blank=True, null=True)),
                ('routeid', models.IntegerField()),
                ('vehicleid', models.IntegerField()),
                ('driverid', models.IntegerField()),
                ('expectedleavedatetime', models.DateTimeField(blank=True, null=True)),
                ('leavedatetime', models.DateTimeField(blank=True, null=True)),
                ('reachdatetime', models.DateTimeField(blank=True, null=True)),
                ('totaltakendistance', models.FloatField()),
                ('totaltakentime', models.TextField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
                ('status', models.IntegerField()),
                ('ordernumber', models.TextField()),
                ('nocommstatus', models.IntegerField(blank=True, null=True)),
                ('poweroffstatus', models.IntegerField(blank=True, null=True)),
                ('reachtimefound', models.IntegerField(blank=True, null=True)),
                ('tripinfo_id', models.IntegerField(blank=True, null=True)),
                ('tripstatus', models.TextField(blank=True, null=True)),
                ('fromplantid', models.IntegerField(blank=True, null=True)),
                ('toplantid', models.IntegerField(blank=True, null=True)),
                ('leavetimefound', models.IntegerField(blank=True, null=True)),
                ('tripdeviation', models.TextField(blank=True, null=True)),
                ('routedeviation', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'iocl_last_trip',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('locationname', models.TextField(blank=True, null=True)),
                ('latitude', models.TextField(blank=True, null=True)),
                ('longitude', models.TextField(blank=True, null=True)),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
                ('status', models.IntegerField()),
                ('key', models.BigIntegerField(blank=True, null=True)),
                ('deviceid', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'iocl_location',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclLocationUnknown',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('locationname', models.TextField(blank=True, null=True)),
                ('latitude', models.TextField(blank=True, null=True)),
                ('longitude', models.TextField(blank=True, null=True)),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
                ('status', models.IntegerField()),
                ('key', models.BigIntegerField(blank=True, null=True)),
                ('deviceid', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'iocl_location_unknown',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclMaillog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mailsubject', models.TextField(blank=True, null=True)),
                ('mailto', models.TextField(blank=True, null=True)),
                ('mailcc', models.TextField(blank=True, null=True)),
                ('mailbcc', models.TextField(blank=True, null=True)),
                ('mailattachment', models.TextField(blank=True, null=True)),
                ('mailstatus', models.IntegerField()),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'iocl_maillog',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclMailsend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imei', models.TextField(blank=True, null=True)),
                ('mail_sendtime', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'iocl_mailsend',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclPlantzone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zonename', models.TextField(blank=True, null=True)),
                ('zone_radious', models.FloatField(blank=True, null=True)),
                ('vehicle_capacity', models.IntegerField(blank=True, null=True)),
                ('createdby', models.IntegerField()),
                ('createdate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
                ('plantid', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'iocl_plantzone',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclReportTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tiripid', models.IntegerField()),
                ('vehicleid', models.IntegerField()),
                ('driverid', models.IntegerField()),
                ('trackdatetime', models.DateTimeField()),
                ('latitude', models.TextField()),
                ('longitude', models.TextField()),
                ('ispanicswitch', models.IntegerField(blank=True, null=True)),
                ('speed', models.FloatField()),
                ('stoppagealert', models.IntegerField()),
                ('isonignition', models.IntegerField()),
                ('fueltank', models.FloatField()),
                ('mainpower', models.IntegerField(blank=True, null=True)),
                ('waypointid', models.IntegerField(blank=True, null=True)),
                ('odometer', models.CharField(blank=True, max_length=20, null=True)),
                ('statusindicator', models.CharField(blank=True, max_length=5, null=True)),
                ('latdirection', models.CharField(blank=True, max_length=1, null=True)),
                ('longdirection', models.CharField(blank=True, max_length=1, null=True)),
                ('altitude', models.FloatField(blank=True, null=True)),
                ('harshaccelation', models.IntegerField(blank=True, null=True)),
                ('harshbreak', models.IntegerField(blank=True, null=True)),
                ('harshmaneuvering', models.IntegerField(blank=True, null=True)),
                ('heading', models.FloatField(blank=True, null=True)),
                ('gsmsignalstregth', models.FloatField(blank=True, null=True)),
                ('lowinternalbattery', models.CharField(blank=True, max_length=30, null=True)),
                ('externalbatteryvoltage', models.FloatField(blank=True, null=True)),
                ('internalbatteryvoltage', models.FloatField(blank=True, null=True)),
                ('locationid', models.IntegerField(blank=True, null=True)),
                ('placeid', models.IntegerField(blank=True, null=True)),
                ('zoneid', models.IntegerField(blank=True, null=True)),
                ('isinaccidentzone', models.IntegerField(blank=True, null=True)),
                ('istemperatingmachine', models.IntegerField(blank=True, null=True)),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
                ('status', models.IntegerField()),
                ('overspeed', models.IntegerField()),
                ('geofencingzoneids', models.TextField(blank=True, null=True)),
                ('reserved', models.IntegerField(blank=True, null=True)),
                ('nightdrive', models.IntegerField(blank=True, null=True)),
                ('continuesdriving', models.IntegerField(blank=True, null=True)),
                ('devicedetail', models.CharField(blank=True, max_length=20, null=True)),
                ('rawdata', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'iocl_report_table',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniquecode', models.TextField()),
                ('rolename', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'iocl_role',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclRolemapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('roleid', models.IntegerField()),
                ('module', models.TextField(blank=True, null=True)),
                ('permission', models.IntegerField()),
            ],
            options={
                'db_table': 'iocl_rolemapping',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclRoute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniquecode', models.TextField()),
                ('routename', models.TextField()),
                ('routeno', models.TextField(blank=True, null=True)),
                ('senderwaypointid', models.IntegerField()),
                ('receiverwaypointid', models.IntegerField()),
                ('senderremarks', models.TextField(blank=True, null=True)),
                ('receiverremarks', models.TextField(blank=True, null=True)),
                ('speedlimit', models.IntegerField(blank=True, null=True)),
                ('totaldistance', models.IntegerField(blank=True, null=True)),
                ('pointslist', models.TextField(blank=True, null=True)),
                ('geofencing', models.IntegerField(blank=True, null=True)),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
                ('status', models.IntegerField()),
                ('distance', models.FloatField(blank=True, null=True)),
                ('companyid', models.IntegerField()),
                ('mapimage', models.TextField(blank=True, null=True)),
                ('physicaldistance', models.FloatField(blank=True, null=True)),
                ('senderplantid', models.IntegerField()),
                ('receiverplantid', models.IntegerField()),
            ],
            options={
                'db_table': 'iocl_route',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclRouteWaypoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniquecode', models.TextField()),
                ('routeid', models.IntegerField()),
                ('waypointid', models.IntegerField()),
                ('sequence', models.IntegerField()),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
                ('status', models.IntegerField()),
                ('distance', models.FloatField(blank=True, null=True)),
                ('isstartend', models.IntegerField()),
                ('physicaldistance', models.FloatField(blank=True, null=True)),
                ('isplant', models.IntegerField()),
            ],
            options={
                'db_table': 'iocl_route_waypoint',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclRtd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniquecode', models.TextField()),
                ('name_address', models.TextField(blank=True, null=True)),
                ('drc_code', models.TextField(blank=True, null=True)),
                ('old_total_rtd', models.FloatField()),
                ('old_verification_date', models.DateField(blank=True, null=True)),
                ('old_truck_charge', models.IntegerField()),
                ('old_multi_axle_charge', models.IntegerField()),
                ('new_plain_in_km', models.FloatField()),
                ('new_hill_in_km', models.FloatField()),
                ('new_high_hill_in_km', models.FloatField()),
                ('new_total_rtd', models.FloatField()),
                ('new_verification_date', models.DateField(blank=True, null=True)),
                ('new_truck_charge', models.IntegerField()),
                ('new_multi_axle_charge', models.IntegerField()),
                ('reason_for_new_rtd', models.TextField(blank=True, null=True)),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
                ('status', models.IntegerField()),
                ('routeid', models.IntegerField()),
                ('effective_date', models.DateField(blank=True, null=True)),
                ('isverified', models.IntegerField(blank=True, null=True)),
                ('verifiedby', models.IntegerField(blank=True, null=True)),
                ('verifieddate', models.DateTimeField(blank=True, null=True)),
                ('duration', models.FloatField(blank=True, null=True)),
                ('rtdcode', models.TextField(blank=True, null=True)),
                ('rtdfrom', models.TextField(blank=True, null=True)),
                ('rtdto', models.TextField(blank=True, null=True)),
                ('rtdrequestid', models.IntegerField()),
                ('approv_status', models.IntegerField(blank=True, null=True)),
                ('pdffilename', models.TextField(blank=True, null=True)),
                ('sap_uploaded_date', models.DateTimeField(blank=True, null=True)),
                ('reference_no', models.TextField(blank=True, null=True)),
                ('locationcode', models.TextField(blank=True, null=True)),
                ('remark', models.TextField(blank=True, null=True)),
                ('fromplantid', models.IntegerField(blank=True, null=True)),
                ('toplantid', models.IntegerField(blank=True, null=True)),
                ('iscompleted', models.IntegerField()),
                ('senderplantid', models.IntegerField()),
                ('receiverplantid', models.IntegerField()),
                ('ishold', models.IntegerField()),
                ('reverserouteid', models.IntegerField(blank=True, null=True)),
                ('reply_by_admin', models.TextField(blank=True, null=True)),
                ('routetotaltime', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'iocl_rtd',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclRtdconnect',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('r1_rtdid', models.IntegerField(blank=True, null=True)),
                ('rtdid', models.IntegerField(blank=True, null=True)),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'iocl_rtdconnect',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclRtddoc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniquecode', models.TextField()),
                ('rtdid', models.IntegerField()),
                ('filename', models.TextField(blank=True, null=True)),
                ('filetype', models.TextField(blank=True, null=True)),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'iocl_rtddoc',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclRtdProcess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rtdid', models.IntegerField(blank=True, null=True)),
                ('userid', models.IntegerField(blank=True, null=True)),
                ('is_approved', models.IntegerField(blank=True, null=True)),
                ('action_date', models.DateTimeField(blank=True, null=True)),
                ('select_route_reason', models.TextField(blank=True, null=True)),
                ('route_change_reason', models.TextField(blank=True, null=True)),
                ('remark', models.TextField(blank=True, null=True)),
                ('created_by', models.IntegerField()),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField()),
                ('isdeleted', models.IntegerField()),
                ('isreapprove', models.IntegerField()),
                ('reply_by_admin', models.TextField(blank=True, null=True)),
                ('reply_admin_pending', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'iocl_rtd_process',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclRtdrequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniquecode', models.TextField()),
                ('fromwaypointid', models.IntegerField(blank=True, null=True)),
                ('towaypointid', models.IntegerField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
                ('status', models.IntegerField()),
                ('rtdstatus', models.IntegerField()),
                ('rtdclosedby', models.IntegerField(blank=True, null=True)),
                ('rtdcloseeddate', models.DateTimeField(blank=True, null=True)),
                ('fromplantid', models.IntegerField()),
                ('toplantid', models.IntegerField()),
            ],
            options={
                'db_table': 'iocl_rtdrequest',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclRtdtime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rtdtimeid', models.BigIntegerField(blank=True, null=True)),
                ('uniquecode', models.TextField()),
                ('isdeleted', models.IntegerField()),
                ('routeid', models.IntegerField()),
                ('routetotaltime', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'iocl_rtdtime',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclRtdTollplaza',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rtdid', models.IntegerField(blank=True, null=True)),
                ('tollplazaid', models.IntegerField(blank=True, null=True)),
                ('double_exel_oneway', models.FloatField(blank=True, null=True)),
                ('double_exel_twoway', models.FloatField(blank=True, null=True)),
                ('multi_axle_oneway', models.FloatField(blank=True, null=True)),
                ('multi_axle_twoway', models.FloatField(blank=True, null=True)),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
                ('status', models.IntegerField()),
                ('roadtype', models.TextField(blank=True, null=True)),
                ('kmcover', models.FloatField(blank=True, null=True)),
                ('fromplace', models.TextField(blank=True, null=True)),
                ('toplace', models.TextField(blank=True, null=True)),
                ('sequence', models.IntegerField()),
                ('rate_revisiondoc', models.TextField(blank=True, null=True)),
                ('route_id', models.IntegerField(blank=True, null=True)),
                ('reverse_routeid', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'iocl_rtd_tollplaza',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclSimcardProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniquecode', models.TextField()),
                ('simcardprovider', models.TextField(blank=True, null=True)),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'iocl_simcard_provider',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclSpeedmonitorReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniquecode', models.TextField()),
                ('vehicleid', models.IntegerField()),
                ('track_date', models.DateTimeField()),
                ('max_speed', models.FloatField(blank=True, null=True)),
                ('average_speed', models.FloatField(blank=True, null=True)),
                ('total_exceed_speed', models.FloatField()),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('modified_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField()),
                ('isdeleted', models.IntegerField()),
                ('transporterid', models.IntegerField()),
                ('tripid', models.IntegerField()),
                ('vehicleno', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'iocl_speedmonitor_report',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statename', models.TextField(blank=True, null=True)),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'iocl_state',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclStoppageReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniquecode', models.TextField()),
                ('vehicleid', models.IntegerField()),
                ('track_date', models.DateTimeField()),
                ('max_stoppage', models.TextField()),
                ('min_stoppage', models.TextField()),
                ('average_stoppage', models.TextField()),
                ('stop_period', models.TextField()),
                ('stoppage_details', models.TextField(blank=True, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('modified_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField()),
                ('isdeleted', models.IntegerField()),
                ('transporterid', models.IntegerField()),
                ('tripid', models.IntegerField()),
                ('vehicleno', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'iocl_stoppage_report',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclTollPlaza',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniquecode', models.TextField()),
                ('rtdid', models.IntegerField(blank=True, null=True)),
                ('tollplazaname', models.TextField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('latitude', models.TextField(blank=True, null=True)),
                ('longitude', models.TextField(blank=True, null=True)),
                ('notification_file', models.TextField(blank=True, null=True)),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
                ('status', models.IntegerField()),
                ('referencelink', models.TextField(blank=True, null=True)),
                ('rate_revision', models.TextField(blank=True, null=True)),
                ('tollplazadetails', models.TextField(blank=True, null=True)),
                ('roadtype', models.TextField(blank=True, null=True)),
                ('kmcover', models.FloatField(blank=True, null=True)),
                ('fromplace', models.TextField(blank=True, null=True)),
                ('toplace', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'iocl_toll_plaza',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclTollplaza2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rtdid', models.IntegerField(blank=True, null=True)),
                ('tollplaza', models.TextField(blank=True, null=True)),
                ('double_exel_oneway', models.FloatField(blank=True, null=True)),
                ('double_exel_twoway', models.FloatField(blank=True, null=True)),
                ('multi_axle_oneway', models.FloatField(blank=True, null=True)),
                ('multi_axle_twoway', models.FloatField(blank=True, null=True)),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'iocl_tollplaza',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclTrackinglog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tiripid', models.IntegerField()),
                ('vehicleid', models.IntegerField()),
                ('driverid', models.IntegerField()),
                ('trackdatetime', models.DateTimeField()),
                ('latitude', models.TextField()),
                ('longitude', models.TextField()),
                ('ispanicswitch', models.IntegerField(blank=True, null=True)),
                ('speed', models.FloatField()),
                ('stoppagealert', models.IntegerField()),
                ('isonignition', models.IntegerField()),
                ('fueltank', models.FloatField()),
                ('mainpower', models.IntegerField(blank=True, null=True)),
                ('waypointid', models.IntegerField(blank=True, null=True)),
                ('odometer', models.CharField(blank=True, max_length=20, null=True)),
                ('statusindicator', models.CharField(blank=True, max_length=5, null=True)),
                ('latdirection', models.CharField(blank=True, max_length=1, null=True)),
                ('longdirection', models.CharField(blank=True, max_length=1, null=True)),
                ('altitude', models.FloatField(blank=True, null=True)),
                ('harshaccelation', models.IntegerField(blank=True, null=True)),
                ('harshbreak', models.IntegerField(blank=True, null=True)),
                ('harshmaneuvering', models.IntegerField(blank=True, null=True)),
                ('heading', models.FloatField(blank=True, null=True)),
                ('gsmsignalstregth', models.FloatField(blank=True, null=True)),
                ('lowinternalbattery', models.CharField(blank=True, max_length=30, null=True)),
                ('externalbatteryvoltage', models.FloatField(blank=True, null=True)),
                ('internalbatteryvoltage', models.FloatField(blank=True, null=True)),
                ('locationid', models.IntegerField(blank=True, null=True)),
                ('placeid', models.IntegerField(blank=True, null=True)),
                ('zoneid', models.IntegerField(blank=True, null=True)),
                ('isinaccidentzone', models.IntegerField(blank=True, null=True)),
                ('istemperatingmachine', models.IntegerField(blank=True, null=True)),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
                ('status', models.IntegerField()),
                ('overspeed', models.IntegerField()),
                ('geofencingzoneids', models.TextField(blank=True, null=True)),
                ('reserved', models.IntegerField(blank=True, null=True)),
                ('nightdrive', models.IntegerField(blank=True, null=True)),
                ('continuesdriving', models.IntegerField(blank=True, null=True)),
                ('devicedetail', models.CharField(blank=True, max_length=20, null=True)),
                ('rawdata', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'iocl_trackinglog',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclTrackinglogDuplicate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tiripid', models.IntegerField()),
                ('vehicleid', models.IntegerField()),
                ('driverid', models.IntegerField()),
                ('trackdatetime', models.DateTimeField()),
                ('latitude', models.TextField()),
                ('longitude', models.TextField()),
                ('ispanicswitch', models.IntegerField(blank=True, null=True)),
                ('speed', models.FloatField()),
                ('stoppagealert', models.IntegerField()),
                ('isonignition', models.IntegerField()),
                ('fueltank', models.FloatField()),
                ('mainpower', models.IntegerField(blank=True, null=True)),
                ('waypointid', models.IntegerField(blank=True, null=True)),
                ('odometer', models.CharField(blank=True, max_length=20, null=True)),
                ('statusindicator', models.CharField(blank=True, max_length=5, null=True)),
                ('latdirection', models.CharField(blank=True, max_length=1, null=True)),
                ('longdirection', models.CharField(blank=True, max_length=1, null=True)),
                ('altitude', models.FloatField(blank=True, null=True)),
                ('harshaccelation', models.IntegerField(blank=True, null=True)),
                ('harshbreak', models.IntegerField(blank=True, null=True)),
                ('harshmaneuvering', models.IntegerField(blank=True, null=True)),
                ('heading', models.FloatField(blank=True, null=True)),
                ('gsmsignalstregth', models.FloatField(blank=True, null=True)),
                ('lowinternalbattery', models.CharField(blank=True, max_length=30, null=True)),
                ('externalbatteryvoltage', models.FloatField(blank=True, null=True)),
                ('internalbatteryvoltage', models.FloatField(blank=True, null=True)),
                ('locationid', models.IntegerField(blank=True, null=True)),
                ('placeid', models.IntegerField(blank=True, null=True)),
                ('zoneid', models.IntegerField(blank=True, null=True)),
                ('isinaccidentzone', models.IntegerField(blank=True, null=True)),
                ('istemperatingmachine', models.IntegerField(blank=True, null=True)),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
                ('status', models.IntegerField()),
                ('overspeed', models.IntegerField()),
                ('geofencingzoneids', models.TextField(blank=True, null=True)),
                ('reserved', models.IntegerField(blank=True, null=True)),
                ('nightdrive', models.IntegerField(blank=True, null=True)),
                ('continuesdriving', models.IntegerField(blank=True, null=True)),
                ('devicedetail', models.CharField(blank=True, max_length=20, null=True)),
                ('rawdata', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'iocl_trackinglog_duplicate',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclTransporterMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniquecode', models.TextField()),
                ('userid', models.IntegerField()),
                ('connected_userid', models.IntegerField()),
            ],
            options={
                'db_table': 'iocl_transporter_mapping',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclTransporterVehicleMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniquecode', models.TextField()),
                ('transporterid', models.IntegerField(blank=True, null=True)),
                ('vehicleid', models.IntegerField(blank=True, null=True)),
                ('otp', models.IntegerField(blank=True, null=True)),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
            ],
            options={
                'db_table': 'iocl_transporter_vehicle_mapping',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclTravelhistoryReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniquecode', models.TextField()),
                ('vehicleid', models.IntegerField()),
                ('track_date', models.DateTimeField(blank=True, null=True)),
                ('traveldetails', models.TextField()),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('modified_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField()),
                ('isdeleted', models.IntegerField()),
                ('transporterid', models.IntegerField()),
                ('tripid', models.IntegerField()),
                ('vehicleno', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'iocl_travelhistory_report',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclTrip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniquecode', models.TextField()),
                ('tripname', models.TextField(blank=True, null=True)),
                ('routeid', models.IntegerField()),
                ('vehicleid', models.IntegerField()),
                ('driverid', models.IntegerField()),
                ('expectedleavedatetime', models.DateTimeField(blank=True, null=True)),
                ('expectedreachdatetime', models.DateTimeField(blank=True, null=True)),
                ('leavedatetime', models.DateTimeField(blank=True, null=True)),
                ('reachdatetime', models.DateTimeField(blank=True, null=True)),
                ('routetype', models.TextField(blank=True, null=True)),
                ('routestatus', models.TextField(blank=True, null=True)),
                ('totaltakendistance', models.FloatField()),
                ('totaltakentime', models.TextField()),
                ('isreturntrip', models.IntegerField()),
                ('returnrouteid', models.IntegerField(blank=True, null=True)),
                ('returnexpectedleavedatetime', models.DateTimeField(blank=True, null=True)),
                ('returnexpectedreachdatetime', models.DateTimeField(blank=True, null=True)),
                ('returnleavedatetime', models.DateTimeField(blank=True, null=True)),
                ('returnreachdatetime', models.DateTimeField(blank=True, null=True)),
                ('iscancel', models.IntegerField()),
                ('cancelreason', models.TextField(blank=True, null=True)),
                ('canceledby', models.IntegerField(blank=True, null=True)),
                ('canceleddate', models.DateTimeField(blank=True, null=True)),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
                ('status', models.IntegerField()),
                ('ordernumber', models.TextField()),
                ('vehicleinflag', models.IntegerField()),
                ('nocommstatus', models.IntegerField(blank=True, null=True)),
                ('poweroffstatus', models.IntegerField(blank=True, null=True)),
                ('reachtimefound', models.IntegerField(blank=True, null=True)),
                ('tripinfo_id', models.IntegerField(blank=True, null=True)),
                ('tripstatus', models.TextField(blank=True, null=True)),
                ('fromplantid', models.IntegerField(blank=True, null=True)),
                ('toplantid', models.IntegerField(blank=True, null=True)),
                ('leavetimefound', models.IntegerField(blank=True, null=True)),
                ('tripdeviation', models.TextField(blank=True, null=True)),
                ('routedeviation', models.TextField(blank=True, null=True)),
                ('vehicleno', models.BigIntegerField(blank=True, null=True)),
                ('vehicle', models.BinaryField(blank=True, null=True)),
                ('sequence_no', models.IntegerField(blank=True, null=True)),
                ('driver_name', models.TextField(blank=True, null=True)),
                ('driver_mobileno', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'iocl_trip',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclTripinfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distributorcode', models.TextField(blank=True, null=True)),
                ('plantcode', models.TextField(blank=True, null=True)),
                ('docno', models.TextField(blank=True, null=True)),
                ('vehicleno', models.TextField(blank=True, null=True)),
                ('documenttime', models.DateTimeField(blank=True, null=True)),
                ('cancellation', models.TextField(blank=True, null=True)),
                ('insert_time', models.DateTimeField(blank=True, null=True)),
                ('isprocess', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'iocl_tripinfo',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclTriplog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tripid', models.IntegerField(blank=True, null=True)),
                ('tripstarttime', models.DateTimeField(blank=True, null=True)),
                ('tripendtime', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'iocl_triplog',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclTripOld',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tripid', models.IntegerField()),
                ('uniquecode', models.TextField()),
                ('tripname', models.TextField(blank=True, null=True)),
                ('routeid', models.IntegerField()),
                ('vehicleid', models.IntegerField()),
                ('driverid', models.IntegerField()),
                ('expectedleavedatetime', models.DateTimeField(blank=True, null=True)),
                ('expectedreachdatetime', models.DateTimeField(blank=True, null=True)),
                ('leavedatetime', models.DateTimeField(blank=True, null=True)),
                ('reachdatetime', models.DateTimeField(blank=True, null=True)),
                ('routetype', models.TextField(blank=True, null=True)),
                ('routestatus', models.TextField(blank=True, null=True)),
                ('totaltakendistance', models.FloatField()),
                ('totaltakentime', models.TextField()),
                ('isreturntrip', models.IntegerField()),
                ('returnrouteid', models.IntegerField(blank=True, null=True)),
                ('returnexpectedleavedatetime', models.DateTimeField(blank=True, null=True)),
                ('returnexpectedreachdatetime', models.DateTimeField(blank=True, null=True)),
                ('returnleavedatetime', models.DateTimeField(blank=True, null=True)),
                ('returnreachdatetime', models.DateTimeField(blank=True, null=True)),
                ('iscancel', models.IntegerField()),
                ('cancelreason', models.TextField(blank=True, null=True)),
                ('canceledby', models.IntegerField(blank=True, null=True)),
                ('canceleddate', models.DateTimeField(blank=True, null=True)),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
                ('status', models.IntegerField()),
                ('ordernumber', models.TextField()),
                ('vehicleinflag', models.IntegerField()),
                ('nocommstatus', models.IntegerField(blank=True, null=True)),
                ('poweroffstatus', models.IntegerField(blank=True, null=True)),
                ('reachtimefound', models.IntegerField(blank=True, null=True)),
                ('tripinfo_id', models.IntegerField(blank=True, null=True)),
                ('tripstatus', models.TextField(blank=True, null=True)),
                ('fromplantid', models.IntegerField(blank=True, null=True)),
                ('toplantid', models.IntegerField(blank=True, null=True)),
                ('leavetimefound', models.IntegerField(blank=True, null=True)),
                ('tripdeviation', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'iocl_trip_old',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclUnregisterdata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imei', models.TextField(blank=True, null=True)),
                ('rawdata', models.TextField(blank=True, null=True)),
                ('insert_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'iocl_unregisterdata',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclUserloginLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField(blank=True, null=True)),
                ('device', models.TextField(blank=True, null=True)),
                ('deviceid', models.IntegerField(blank=True, null=True)),
                ('ipaddress', models.TextField(blank=True, null=True)),
                ('startdatetime', models.DateTimeField(blank=True, null=True)),
                ('enddatetime', models.DateTimeField(blank=True, null=True)),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('os_flag', models.IntegerField()),
            ],
            options={
                'db_table': 'iocl_userlogin_log',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniquecode', models.TextField()),
                ('roleid', models.IntegerField()),
                ('name', models.TextField(blank=True, null=True)),
                ('email', models.TextField(blank=True, null=True)),
                ('password', models.TextField(blank=True, null=True)),
                ('mobileno', models.TextField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('usertype', models.TextField(blank=True, null=True)),
                ('employeeno', models.TextField(blank=True, null=True)),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
                ('status', models.IntegerField()),
                ('stateid', models.IntegerField()),
                ('companyid', models.IntegerField()),
                ('transporterno', models.TextField(blank=True, null=True)),
                ('isverify', models.IntegerField()),
                ('groupid', models.IntegerField()),
                ('repot_emailids', models.TextField(blank=True, null=True)),
                ('is_auto_lpg_officer', models.IntegerField()),
                ('parent_id', models.IntegerField()),
                ('multi_companyid', models.TextField()),
                ('sendemail', models.IntegerField(blank=True, db_column='sendEmail', null=True)),
                ('private_company_id', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'iocl_users',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclVehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniquecode', models.TextField()),
                ('transporterid', models.IntegerField(blank=True, null=True)),
                ('companyid', models.TextField(blank=True, null=True)),
                ('vehicleno', models.TextField(blank=True, null=True)),
                ('engineid', models.TextField(blank=True, null=True)),
                ('chassisid', models.TextField(blank=True, null=True)),
                ('deviceid', models.IntegerField(blank=True, null=True)),
                ('installationdate', models.DateField(blank=True, null=True)),
                ('vehiclecolor', models.TextField(blank=True, null=True)),
                ('vehicleimage', models.TextField(blank=True, null=True)),
                ('tanklimit', models.FloatField(blank=True, null=True)),
                ('vehiclecapacity', models.TextField(blank=True, null=True)),
                ('vehiclestatus', models.TextField(blank=True, null=True)),
                ('milege', models.FloatField(blank=True, null=True)),
                ('startingmeter', models.IntegerField(blank=True, null=True)),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
                ('status', models.IntegerField()),
                ('inmaintenance', models.IntegerField()),
                ('last_odometer', models.CharField(blank=True, max_length=20, null=True)),
                ('new_device_odometer', models.IntegerField(blank=True, null=True)),
                ('moreinfo', models.TextField(blank=True, null=True)),
                ('cronjob', models.IntegerField()),
                ('travelhistory_report', models.IntegerField()),
                ('speedmonitor_report', models.IntegerField()),
                ('distancemovement_report', models.IntegerField()),
                ('stoppage_report', models.IntegerField()),
                ('inaccident', models.IntegerField(blank=True, null=True)),
                ('inpendinginstallation', models.IntegerField()),
                ('owner_name', models.TextField(blank=True, null=True)),
                ('imei_no', models.TextField(blank=True, null=True)),
                ('rto_name', models.TextField(blank=True, null=True)),
                ('vehiclecategoryid', models.BigIntegerField(blank=True, null=True)),
                ('vehicletypeid', models.BigIntegerField(blank=True, null=True)),
                ('owners_address', models.TextField(blank=True, null=True)),
                ('owners_contact', models.TextField(blank=True, null=True)),
                ('vltmanufacturerid', models.BigIntegerField(blank=True, null=True)),
                ('vltmodelid', models.BigIntegerField(blank=True, null=True)),
                ('installation_date', models.DateField(blank=True, null=True)),
                ('simcardproviderid', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'iocl_vehicle',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclVehicle012021',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniquecode', models.TextField()),
                ('transporterid', models.IntegerField(blank=True, null=True)),
                ('companyid', models.TextField(blank=True, null=True)),
                ('vehicleno', models.TextField(blank=True, null=True)),
                ('engineid', models.TextField(blank=True, null=True)),
                ('chassisid', models.TextField(blank=True, null=True)),
                ('deviceid', models.IntegerField(blank=True, null=True)),
                ('installationdate', models.DateField(blank=True, null=True)),
                ('vehiclecolor', models.TextField(blank=True, null=True)),
                ('vehicleimage', models.TextField(blank=True, null=True)),
                ('tanklimit', models.FloatField()),
                ('vehiclecapacity', models.TextField(blank=True, null=True)),
                ('vehiclestatus', models.TextField(blank=True, null=True)),
                ('milege', models.FloatField()),
                ('startingmeter', models.IntegerField()),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
                ('status', models.IntegerField()),
                ('inmaintenance', models.IntegerField()),
                ('last_odometer', models.CharField(blank=True, max_length=20, null=True)),
                ('new_device_odometer', models.IntegerField(blank=True, null=True)),
                ('moreinfo', models.TextField(blank=True, null=True)),
                ('cronjob', models.IntegerField()),
                ('travelhistory_report', models.IntegerField()),
                ('speedmonitor_report', models.IntegerField()),
                ('distancemovement_report', models.IntegerField()),
                ('stoppage_report', models.IntegerField()),
                ('inaccident', models.IntegerField(blank=True, null=True)),
                ('inpendinginstallation', models.IntegerField()),
            ],
            options={
                'db_table': 'iocl_vehicle_01_2021',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclVehicle022021',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniquecode', models.TextField()),
                ('transporterid', models.IntegerField(blank=True, null=True)),
                ('companyid', models.TextField(blank=True, null=True)),
                ('vehicleno', models.TextField(blank=True, null=True)),
                ('engineid', models.TextField(blank=True, null=True)),
                ('chassisid', models.TextField(blank=True, null=True)),
                ('deviceid', models.IntegerField(blank=True, null=True)),
                ('installationdate', models.DateField(blank=True, null=True)),
                ('vehiclecolor', models.TextField(blank=True, null=True)),
                ('vehicleimage', models.TextField(blank=True, null=True)),
                ('tanklimit', models.FloatField()),
                ('vehiclecapacity', models.TextField(blank=True, null=True)),
                ('vehiclestatus', models.TextField(blank=True, null=True)),
                ('milege', models.FloatField()),
                ('startingmeter', models.IntegerField()),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
                ('status', models.IntegerField()),
                ('inmaintenance', models.IntegerField()),
                ('last_odometer', models.CharField(blank=True, max_length=20, null=True)),
                ('new_device_odometer', models.IntegerField(blank=True, null=True)),
                ('moreinfo', models.TextField(blank=True, null=True)),
                ('cronjob', models.IntegerField()),
                ('travelhistory_report', models.IntegerField()),
                ('speedmonitor_report', models.IntegerField()),
                ('distancemovement_report', models.IntegerField()),
                ('stoppage_report', models.IntegerField()),
                ('inaccident', models.IntegerField(blank=True, null=True)),
                ('inpendinginstallation', models.IntegerField()),
            ],
            options={
                'db_table': 'iocl_vehicle_02_2021',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclVehicle032021',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniquecode', models.TextField()),
                ('transporterid', models.IntegerField(blank=True, null=True)),
                ('companyid', models.TextField(blank=True, null=True)),
                ('vehicleno', models.TextField(blank=True, null=True)),
                ('engineid', models.TextField(blank=True, null=True)),
                ('chassisid', models.TextField(blank=True, null=True)),
                ('deviceid', models.IntegerField(blank=True, null=True)),
                ('installationdate', models.DateField(blank=True, null=True)),
                ('vehiclecolor', models.TextField(blank=True, null=True)),
                ('vehicleimage', models.TextField(blank=True, null=True)),
                ('tanklimit', models.FloatField()),
                ('vehiclecapacity', models.TextField(blank=True, null=True)),
                ('vehiclestatus', models.TextField(blank=True, null=True)),
                ('milege', models.FloatField()),
                ('startingmeter', models.IntegerField()),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
                ('status', models.IntegerField()),
                ('inmaintenance', models.IntegerField()),
                ('last_odometer', models.CharField(blank=True, max_length=20, null=True)),
                ('new_device_odometer', models.IntegerField(blank=True, null=True)),
                ('moreinfo', models.TextField(blank=True, null=True)),
                ('cronjob', models.IntegerField()),
                ('travelhistory_report', models.IntegerField()),
                ('speedmonitor_report', models.IntegerField()),
                ('distancemovement_report', models.IntegerField()),
                ('stoppage_report', models.IntegerField()),
                ('inaccident', models.IntegerField(blank=True, null=True)),
                ('inpendinginstallation', models.IntegerField()),
            ],
            options={
                'db_table': 'iocl_vehicle_03_2021',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclVehicle042020',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniquecode', models.TextField()),
                ('transporterid', models.IntegerField(blank=True, null=True)),
                ('companyid', models.TextField(blank=True, null=True)),
                ('vehicleno', models.TextField(blank=True, null=True)),
                ('engineid', models.TextField(blank=True, null=True)),
                ('chassisid', models.TextField(blank=True, null=True)),
                ('deviceid', models.IntegerField(blank=True, null=True)),
                ('installationdate', models.DateField(blank=True, null=True)),
                ('vehiclecolor', models.TextField(blank=True, null=True)),
                ('vehicleimage', models.TextField(blank=True, null=True)),
                ('tanklimit', models.FloatField()),
                ('vehiclecapacity', models.TextField(blank=True, null=True)),
                ('vehiclestatus', models.TextField(blank=True, null=True)),
                ('milege', models.FloatField()),
                ('startingmeter', models.IntegerField()),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
                ('status', models.IntegerField()),
                ('inmaintenance', models.IntegerField()),
                ('last_odometer', models.CharField(blank=True, max_length=20, null=True)),
                ('new_device_odometer', models.IntegerField(blank=True, null=True)),
                ('moreinfo', models.TextField(blank=True, null=True)),
                ('cronjob', models.IntegerField()),
                ('travelhistory_report', models.IntegerField()),
                ('speedmonitor_report', models.IntegerField()),
                ('distancemovement_report', models.IntegerField()),
                ('stoppage_report', models.IntegerField()),
                ('inaccident', models.IntegerField(blank=True, null=True)),
                ('inpendinginstallation', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'iocl_vehicle_04_2020',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclVehicle042021',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicleid', models.IntegerField(blank=True, null=True)),
                ('uniquecode', models.TextField()),
                ('transporterid', models.IntegerField(blank=True, null=True)),
                ('companyid', models.TextField(blank=True, null=True)),
                ('vehicleno', models.TextField(blank=True, null=True)),
                ('engineid', models.TextField(blank=True, null=True)),
                ('chassisid', models.TextField(blank=True, null=True)),
                ('deviceid', models.IntegerField(blank=True, null=True)),
                ('installationdate', models.DateField(blank=True, null=True)),
                ('vehiclecolor', models.TextField(blank=True, null=True)),
                ('vehicleimage', models.TextField(blank=True, null=True)),
                ('tanklimit', models.FloatField()),
                ('vehiclecapacity', models.TextField(blank=True, null=True)),
                ('vehiclestatus', models.TextField(blank=True, null=True)),
                ('milege', models.FloatField()),
                ('startingmeter', models.IntegerField()),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
                ('status', models.IntegerField()),
                ('inmaintenance', models.IntegerField()),
                ('last_odometer', models.CharField(blank=True, max_length=20, null=True)),
                ('new_device_odometer', models.IntegerField(blank=True, null=True)),
                ('moreinfo', models.TextField(blank=True, null=True)),
                ('cronjob', models.IntegerField()),
                ('travelhistory_report', models.IntegerField()),
                ('speedmonitor_report', models.IntegerField()),
                ('distancemovement_report', models.IntegerField()),
                ('stoppage_report', models.IntegerField()),
                ('inaccident', models.IntegerField(blank=True, null=True)),
                ('inpendinginstallation', models.IntegerField()),
            ],
            options={
                'db_table': 'iocl_vehicle_04_2021',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclVehiclecategoryMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('uniquecode', models.UUIDField()),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'iocl_vehiclecategory_master',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclVehicleInsurance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniquecode', models.TextField()),
                ('vehicleid', models.IntegerField()),
                ('insurancecompanyname', models.TextField(blank=True, null=True)),
                ('insurancestartdate', models.DateField(blank=True, null=True)),
                ('insuranceenddate', models.DateField(blank=True, null=True)),
                ('iscurrent', models.IntegerField()),
                ('insurancepolicyno', models.TextField(blank=True, null=True)),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'iocl_vehicle_insurance',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclVehicleOld',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniquecode', models.TextField()),
                ('transporterid', models.IntegerField(blank=True, null=True)),
                ('companyid', models.TextField(blank=True, null=True)),
                ('vehicleno', models.TextField(blank=True, null=True)),
                ('engineid', models.TextField(blank=True, null=True)),
                ('chassisid', models.TextField(blank=True, null=True)),
                ('deviceid', models.IntegerField(blank=True, null=True)),
                ('installationdate', models.DateField(blank=True, null=True)),
                ('vehiclecolor', models.TextField(blank=True, null=True)),
                ('vehicleimage', models.TextField(blank=True, null=True)),
                ('tanklimit', models.FloatField()),
                ('vehiclecapacity', models.TextField(blank=True, null=True)),
                ('vehiclestatus', models.TextField(blank=True, null=True)),
                ('milege', models.FloatField()),
                ('startingmeter', models.IntegerField()),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
                ('status', models.IntegerField()),
                ('inmaintenance', models.IntegerField()),
                ('last_odometer', models.CharField(blank=True, max_length=20, null=True)),
                ('new_device_odometer', models.IntegerField(blank=True, null=True)),
                ('moreinfo', models.TextField(blank=True, null=True)),
                ('cronjob', models.IntegerField()),
                ('travelhistory_report', models.IntegerField()),
                ('speedmonitor_report', models.IntegerField()),
                ('distancemovement_report', models.IntegerField()),
                ('stoppage_report', models.IntegerField()),
            ],
            options={
                'db_table': 'iocl_vehicle_old',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclVehiclePuc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniquecode', models.TextField()),
                ('vehicleid', models.IntegerField()),
                ('pucno', models.TextField(blank=True, null=True)),
                ('pucstartdate', models.DateField(blank=True, null=True)),
                ('pucenddate', models.DateField(blank=True, null=True)),
                ('iscurrent', models.IntegerField()),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'iocl_vehicle_puc',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclVehicleQueue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniquecode', models.TextField()),
                ('queueno', models.IntegerField(blank=True, null=True)),
                ('zone_status', models.IntegerField(blank=True, null=True)),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
            ],
            options={
                'db_table': 'iocl_vehicle_queue',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclVehicleTmp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicleid', models.IntegerField(blank=True, null=True)),
                ('uniquecode', models.TextField(blank=True, null=True)),
                ('transporterid', models.IntegerField(blank=True, null=True)),
                ('companyid', models.TextField(blank=True, null=True)),
                ('vehicleno', models.TextField(blank=True, null=True)),
                ('engineid', models.TextField(blank=True, null=True)),
                ('chassisid', models.TextField(blank=True, null=True)),
                ('deviceid', models.IntegerField(blank=True, null=True)),
                ('installationdate', models.DateField(blank=True, null=True)),
                ('vehiclecolor', models.TextField(blank=True, null=True)),
                ('vehicleimage', models.TextField(blank=True, null=True)),
                ('tanklimit', models.FloatField(blank=True, null=True)),
                ('vehiclecapacity', models.TextField(blank=True, null=True)),
                ('vehiclestatus', models.TextField(blank=True, null=True)),
                ('milege', models.FloatField(blank=True, null=True)),
                ('startingmeter', models.IntegerField(blank=True, null=True)),
                ('createdby', models.IntegerField(blank=True, null=True)),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('inmaintenance', models.IntegerField(blank=True, null=True)),
                ('last_odometer', models.CharField(blank=True, max_length=20, null=True)),
                ('new_device_odometer', models.IntegerField(blank=True, null=True)),
                ('moreinfo', models.TextField(blank=True, null=True)),
                ('cronjob', models.IntegerField(blank=True, null=True)),
                ('travelhistory_report', models.IntegerField(blank=True, null=True)),
                ('speedmonitor_report', models.IntegerField(blank=True, null=True)),
                ('distancemovement_report', models.IntegerField(blank=True, null=True)),
                ('stoppage_report', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'iocl_vehicle_tmp',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclVehicletypeMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('uniquecode', models.UUIDField()),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'iocl_vehicletype_master',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclVltmanufacturerMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniquecode', models.UUIDField()),
                ('name', models.TextField(blank=True, null=True)),
                ('manufacturer_code', models.TextField(blank=True, null=True)),
                ('cin_no', models.TextField(blank=True, null=True)),
                ('gst_no', models.TextField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('phoneno', models.TextField(blank=True, null=True)),
                ('emailid', models.TextField(blank=True, null=True)),
                ('state', models.TextField(blank=True, null=True)),
                ('city', models.TextField(blank=True, null=True)),
                ('ais_140_approved', models.IntegerField()),
                ('smart_mobility_member', models.IntegerField()),
                ('username', models.TextField(blank=True, null=True)),
                ('password', models.TextField(blank=True, null=True)),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'iocl_vltmanufacturer_master',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclVltmodelMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniquecode', models.UUIDField()),
                ('name', models.TextField(blank=True, null=True)),
                ('manufacturer_code_id', models.BigIntegerField()),
                ('model_code', models.TextField(blank=True, null=True)),
                ('production_date', models.DateField(blank=True, null=True)),
                ('is_irnss', models.IntegerField()),
                ('remarks', models.TextField(blank=True, null=True)),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'iocl_vltmodel_master',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclWaypoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniquecode', models.UUIDField()),
                ('waypointname', models.TextField()),
                ('address', models.TextField(blank=True, null=True)),
                ('cityid', models.IntegerField(blank=True, null=True)),
                ('latitude', models.TextField()),
                ('longitude', models.TextField()),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
                ('status', models.IntegerField()),
                ('havegeofence', models.IntegerField()),
                ('geofence', models.IntegerField()),
                ('roadtype', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'iocl_waypoint',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclZonemaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zonename', models.TextField(blank=True, null=True)),
                ('latitude1', models.TextField()),
                ('longitude1', models.TextField()),
                ('latitude2', models.TextField(blank=True, null=True)),
                ('longitude2', models.TextField(blank=True, null=True)),
                ('latitude3', models.TextField(blank=True, null=True)),
                ('longitude3', models.TextField(blank=True, null=True)),
                ('latitude4', models.TextField(blank=True, null=True)),
                ('longitude4', models.TextField(blank=True, null=True)),
                ('latitude5', models.TextField(blank=True, null=True)),
                ('longitude5', models.TextField(blank=True, null=True)),
                ('latitude6', models.TextField(blank=True, null=True)),
                ('longitude6', models.TextField(blank=True, null=True)),
                ('latitude7', models.TextField(blank=True, null=True)),
                ('longitude7', models.TextField(blank=True, null=True)),
                ('latitude8', models.TextField(blank=True, null=True)),
                ('longitude8', models.TextField(blank=True, null=True)),
                ('latitude9', models.TextField(blank=True, null=True)),
                ('longitude9', models.TextField(blank=True, null=True)),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
                ('radius', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'iocl_zonemaster',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IoclZonetype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniquecode', models.TextField()),
                ('zonetype', models.TextField(blank=True, null=True)),
                ('createdby', models.IntegerField()),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'iocl_zonetype',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='LoginMst',
            fields=[
                ('username', models.TextField(blank=True, null=True)),
                ('id_pk', models.AutoField(primary_key=True, serialize=False)),
                ('imei', models.TextField(blank=True, null=True)),
                ('password', models.TextField(blank=True, null=True)),
                ('role', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'login_mst',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Rawdata2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.TextField(blank=True, null=True)),
                ('insert_time', models.DateTimeField(blank=True, null=True)),
                ('track_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('imei', models.TextField(blank=True, null=True)),
                ('type', models.TextField(blank=True, null=True)),
                ('event_code', models.IntegerField(blank=True, null=True)),
                ('dashboard', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rawdata2',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Rawdata22',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.TextField(blank=True, null=True)),
                ('insert_time', models.DateTimeField(blank=True, null=True)),
                ('track_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('imei', models.TextField(blank=True, null=True)),
                ('type', models.TextField(blank=True, null=True)),
                ('event_code', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rawdata2_2',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RawdataB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.TextField(blank=True, null=True)),
                ('insert_time', models.DateTimeField(blank=True, null=True)),
                ('track_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('imei', models.TextField(blank=True, null=True)),
                ('type', models.TextField(blank=True, null=True)),
                ('event_code', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rawdata_b',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RawdataB2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.TextField(blank=True, null=True)),
                ('insert_time', models.DateTimeField(blank=True, null=True)),
                ('track_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('imei', models.TextField(blank=True, null=True)),
                ('type', models.TextField(blank=True, null=True)),
                ('event_code', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rawdata_b2',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RawdataFuturedate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.TextField(blank=True, null=True)),
                ('insert_time', models.DateTimeField(blank=True, null=True)),
                ('track_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('imei', models.TextField(blank=True, null=True)),
                ('type', models.TextField(blank=True, null=True)),
                ('event_code', models.IntegerField(blank=True, null=True)),
                ('dashboard', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rawdata_futuredate',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RawdataInvalid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.TextField(blank=True, null=True)),
                ('insert_time', models.DateTimeField(blank=True, null=True)),
                ('track_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('imei', models.TextField(blank=True, null=True)),
                ('type', models.TextField(blank=True, null=True)),
                ('event_code', models.IntegerField(blank=True, null=True)),
                ('dashboard', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rawdata_invalid',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RawdataItraold',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.TextField(blank=True, null=True)),
                ('insert_time', models.DateTimeField(blank=True, null=True)),
                ('track_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('imei', models.TextField(blank=True, null=True)),
                ('type', models.TextField(blank=True, null=True)),
                ('event_code', models.IntegerField(blank=True, null=True)),
                ('dashboard', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rawdata_itraold',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ReportMst',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.TextField(blank=True, null=True)),
                ('loginid', models.TextField(blank=True, null=True)),
                ('user_location', models.TextField(blank=True, null=True)),
                ('veh_location', models.TextField(blank=True, null=True)),
                ('veh_no', models.TextField(blank=True, null=True)),
                ('veh_status', models.TextField(blank=True, null=True)),
                ('id_pk', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'report_mst',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TestLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('locationid', models.BigIntegerField(blank=True, null=True)),
                ('locationname', models.TextField(blank=True, null=True)),
                ('latitude', models.TextField(blank=True, null=True)),
                ('longitude', models.TextField(blank=True, null=True)),
                ('createdby', models.IntegerField(blank=True, null=True)),
                ('createddate', models.DateTimeField(blank=True, null=True)),
                ('modifiedby', models.IntegerField(blank=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'test_location',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Trackreport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicleid', models.TextField(blank=True, null=True)),
                ('date', models.TextField(blank=True, null=True)),
                ('reporttype', models.TextField(blank=True, null=True)),
                ('emailid', models.TextField(blank=True, null=True)),
                ('emailsenttime', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'trackreport',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UpTime2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('veh_id', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('speed_non_zero_count', models.IntegerField(blank=True, null=True)),
                ('speed_zero_count', models.IntegerField(blank=True, null=True)),
                ('ign_on_count', models.IntegerField(blank=True, null=True)),
                ('ign_off_count', models.IntegerField(blank=True, null=True)),
                ('total_count', models.IntegerField(blank=True, null=True)),
                ('last_location', models.TextField(blank=True, null=True)),
                ('percentage', models.FloatField(blank=True, null=True)),
                ('last_speed', models.IntegerField(blank=True, null=True)),
                ('last_ign', models.IntegerField(blank=True, null=True)),
                ('distance', models.FloatField(blank=True, null=True)),
                ('no_data_flag', models.IntegerField(blank=True, null=True)),
                ('near_plant', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'up_time2',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UpTime2April',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_pk', models.BigIntegerField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('veh_id', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('speed_non_zero_count', models.IntegerField(blank=True, null=True)),
                ('speed_zero_count', models.IntegerField(blank=True, null=True)),
                ('ign_on_count', models.IntegerField(blank=True, null=True)),
                ('ign_off_count', models.IntegerField(blank=True, null=True)),
                ('total_count', models.IntegerField(blank=True, null=True)),
                ('last_location', models.TextField(blank=True, null=True)),
                ('percentage', models.FloatField(blank=True, null=True)),
                ('last_speed', models.IntegerField(blank=True, null=True)),
                ('last_ign', models.IntegerField(blank=True, null=True)),
                ('distance', models.FloatField(blank=True, null=True)),
                ('no_data_flag', models.IntegerField(blank=True, null=True)),
                ('near_plant', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'up_time2_april',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UpTime2Dup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('veh_id', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('speed_non_zero_count', models.IntegerField(blank=True, null=True)),
                ('speed_zero_count', models.IntegerField(blank=True, null=True)),
                ('ign_on_count', models.IntegerField(blank=True, null=True)),
                ('ign_off_count', models.IntegerField(blank=True, null=True)),
                ('total_count', models.IntegerField(blank=True, null=True)),
                ('last_location', models.TextField(blank=True, null=True)),
                ('percentage', models.FloatField(blank=True, null=True)),
                ('last_speed', models.IntegerField(blank=True, null=True)),
                ('last_ign', models.IntegerField(blank=True, null=True)),
                ('distance', models.FloatField(blank=True, null=True)),
                ('no_data_flag', models.IntegerField(blank=True, null=True)),
                ('near_plant', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'up_time2_dup',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UpTimenew3',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('veh_id', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('speed_non_zero_count', models.IntegerField(blank=True, null=True)),
                ('speed_zero_count', models.IntegerField(blank=True, null=True)),
                ('ign_on_count', models.IntegerField(blank=True, null=True)),
                ('ign_off_count', models.IntegerField(blank=True, null=True)),
                ('total_count', models.IntegerField(blank=True, null=True)),
                ('ign_on_minute', models.IntegerField(blank=True, null=True)),
                ('ign_off_minute', models.IntegerField(blank=True, null=True)),
                ('last_ign', models.IntegerField(blank=True, null=True)),
                ('no_data_flag', models.IntegerField(blank=True, null=True)),
                ('near_plant', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'up_timenew3',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Waypoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniquecode', models.UUIDField()),
                ('address', models.TextField(blank=True, null=True)),
                ('waypointname', models.TextField()),
                ('latitude', models.TextField()),
                ('longitude', models.TextField()),
                ('roadtype', models.TextField(blank=True, null=True)),
                ('geofencing', models.IntegerField()),
                ('status', models.IntegerField()),
                ('entby', models.IntegerField()),
                ('entdt', models.DateTimeField()),
                ('updby', models.IntegerField(blank=True, null=True)),
                ('upddt', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'waypoint',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Waypointlatlong',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniquecode', models.UUIDField()),
                ('waypointid', models.IntegerField()),
                ('latitude', models.TextField()),
                ('longitude', models.TextField()),
                ('efffrdt', models.DateTimeField()),
                ('efftodt', models.DateTimeField(blank=True, null=True)),
                ('entby', models.IntegerField()),
                ('entdt', models.DateTimeField(blank=True, null=True)),
                ('updby', models.IntegerField(blank=True, null=True)),
                ('upddt', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'waypointlatlong',
                'managed': True,
            },
        ),
    ]
